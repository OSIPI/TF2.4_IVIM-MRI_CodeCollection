name: Unit tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        # exclude:
        #   - os: macos-latest
        #     python-version: "3.7"
        #   - os: windows-latest
        #     python-version: "3.7"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          python -m pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
      - name: Build notebooks
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'}}
        run: |
          pip install -r notebooks/requirements.txt
          jupyter-book build notebooks/
          touch notebooks/_build/html/.nojekyll
          mv notebooks/_build/html doc/nb