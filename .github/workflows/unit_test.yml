name: Unit tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          - os: windows-latest
            python-version: "3.13"
        # Windows chokes on py3.13: https://github.com/numpy/numpy/issues/27894
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set environment variables for MATLAB Engine
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            echo "DYLD_LIBRARY_PATH=/Applications/MATLAB_R2025a.app/bin/maci64:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "Linux" ]]; then
            echo "LD_LIBRARY_PATH=/usr/local/MATLAB/R2025a/bin/glnxa64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "C:\Program Files\MATLAB\R2025a\bin\win64" >> $GITHUB_PATH
          fi
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2025a 
      - name: Install MATLAB Engine for Python
        run: |
          python -m pip install matlabengine==25.1.2

      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          python -m pytest --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
